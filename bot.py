from telebot import types 
import telebot
import sqlite3 as sq
import time
import asyncio
from config import TOKEN
import random
def init_db():
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS players (
            telegram_id INTEGER PRIMARY KEY,
            name TEXT,
            balance INTEGER DEFAULT 500,
            level INTEGER DEFAULT 1,
            gas_level INTEGER DEFAULT 40,
            reputation INTEGER DEFAULT 90,
            last_tree_time INTEGER DEFAULT 0,
            last_tube_time INTEGER DEFAULT 0,
            passive_money INTEGER DEFAULT 0,
            last_passive_time INTEGER DEFAULT 0,
            top_place INTEGER DEFAULT 0,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            last_active TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            location TEXT DEFAULT 'city',
            last_go_time INTEGER DEFAULT 0,
            last_interview_time INTEGER DEFAULT 0,
            last_daily INTEGER DEFAULT 0,
            last_work_time INTEGER DEFAULT 0,
            last_herbs_time INTEGER DEFAULT 0,
            last_recycle_time INTEGER DEFAULT 0
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS investments (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            telegram_id INTEGER,
            company_name TEXT,
            amount INTEGER,
            category TEXT,
            invest_time INTEGER,
            FOREIGN KEY (telegram_id) REFERENCES players (telegram_id)
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS quests (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            telegram_id INTEGER,
            quest_type TEXT,
            progress INTEGER DEFAULT 0,
            target INTEGER,
            reward INTEGER,
            completed INTEGER DEFAULT 0,
            FOREIGN KEY (telegram_id) REFERENCES players (telegram_id)
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS level_rewards (
            telegram_id INTEGER,
            level INTEGER,
            claimed INTEGER DEFAULT 0,
            PRIMARY KEY (telegram_id, level),
            FOREIGN KEY (telegram_id) REFERENCES players (telegram_id)
        )
    ''')
    connection.commit()
    cursor.close()

init_db()

bot = telebot.TeleBot(TOKEN, parse_mode=None)


companies = {}
selected_company = None
selected_True = False
current_category = None
def update_player_activity(telegram_id):

    connection = sq.connect('game.db')
    cursor = connection.cursor()
    
    cursor.execute('''
        UPDATE players SET last_active = CURRENT_TIMESTAMP WHERE telegram_id = ?
    ''', (telegram_id,))
    
    connection.commit()
    connection.close()
@bot.message_handler(commands=['start'])
def start_message(message):
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    telegram_id = message.from_user.id
    username = message.from_user.username or f"{message.from_user.first_name} {message.from_user.last_name or ''}".strip()
    

    cursor.execute('SELECT * FROM players WHERE telegram_id = ?', (telegram_id,))
    existing_player = cursor.fetchone()
    
    if existing_player:
        bot.send_message(message.chat.id, "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –í–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –∂–¥–µ—Ç –≤–∞—à–∏—Ö —Ä–µ—à–µ–Ω–∏–π.")
        update_player_activity(telegram_id)
    else:

        try:
            cursor.execute('''
                INSERT INTO players (telegram_id, name, balance, level, gas_level, reputation) 
                VALUES (?, ?, ?, ?, ?, ?)
            ''', (telegram_id, username, 500, 1, 40, 90))
            connection.commit()
            
            welcome_text = """üåç –ü—Ä–∏–≤–µ—Ç! –¢—ã - —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è.

–í —Ç–µ–±—è –≤–µ—Ä—è—Ç –ª—é–¥–∏! –ú–∏—Ä –Ω–∞ –≥—Ä–∞–Ω–∏ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—ã - –ø–∞—Ä–Ω–∏–∫–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç —É—Å–∏–ª–∏–≤–∞–µ—Ç—Å—è –∏–∑-–∑–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–π. 

–¢–µ–±—è —Ñ–∏–Ω–∞–Ω—Å–∏—Ä—É—é—Ç –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–º –Ω–µ –≤—Å—ë —Ä–∞–≤–Ω–æ. –¢–≤–æ–∏ –∑–∞–¥–∞—á–∏:
üí∞ –ù–µ –æ–±–∞–Ω–∫—Ä–æ—Ç–∏—Ç—å—Å—è
‚≠ê –ù–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é  
üåø –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è

–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"""
            
            bot.send_message(message.chat.id, welcome_text)
            
        except sq.Error as e:
            print(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è.")
    
    connection.close()
    game_over = check_game_over(telegram_id)
    if game_over:
        bot.send_message(message.chat.id, f"‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}\n\n–ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start")
def check_game_over(telegram_id):
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    cursor.execute('SELECT balance, reputation, gas_level FROM players WHERE telegram_id = ?', 
                   (telegram_id,))
    result = cursor.fetchone()
    cursor.close()
    connection.close()
    
    if result:
        balance, reputation, gas_level = result
        
        if balance <= 0:
            connection = sq.connect('player.db')
            cursor = connection.cursor()
            cursor.execute('DELETE FROM players WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            cursor.close()
            connection.close()
            return "üí∏ –ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ! –ö–æ–º–ø–∞–Ω–∏—è –æ–±–∞–Ω–∫—Ä–æ—Ç–∏–ª–∞—Å—å."
        elif reputation <= 0:
            connection = sq.connect('player.db')
            cursor = connection.cursor()
            cursor.execute('DELETE FROM players WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            cursor.close()
            connection.close()
            return "üëé –ü–æ—Ç–µ—Ä—è –¥–æ–≤–µ—Ä–∏—è! –õ—é–¥–∏ –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ –≤–∞–º –¥–æ–≤–µ—Ä—è—Ç—å."
        elif gas_level >= 100:
            connection = sq.connect('player.db')
            cursor = connection.cursor()
            cursor.execute('DELETE FROM players WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            cursor.close()
            connection.close()
            return "üå´Ô∏è –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞! –£—Ä–æ–≤–µ–Ω—å –≥–∞–∑–æ–≤ –¥–æ—Å—Ç–∏–≥ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–º–µ—Ç–∫–∏."
    
    return None

@bot.message_handler(commands=['profile', 'balance', 'stats'])
def show_profile(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    cursor.execute('''
        SELECT name, balance, level, gas_level, reputation, 
               passive_money, top_place, last_active
        FROM players 
        WHERE telegram_id = ?
    ''', (telegram_id,))
    
    player = cursor.fetchone()
    connection.close()
    
    if player:
        name, balance, level, gas, reputation, passive, top_place, last_active = player
        status = "‚úÖ –°—Ç–∞–±–∏–ª—å–Ω–∞"
        if balance < 100:
            status = "‚ö†Ô∏è –†–∏—Å–∫ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞"
        if reputation < 30:
            status = "üìâ –†–µ–ø—É—Ç–∞—Ü–∏—è –ø–∞–¥–∞–µ—Ç"
        if gas > 70:
            status = "üå´Ô∏è –í—ã—Å–æ–∫–æ–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ"
        
        response = f"üè¢ –ö–û–ú–ü–ê–ù–ò–Ø: {name}\n"
        response += f"üìä –°—Ç–∞—Ç—É—Å: {status}\n\n"
        response += f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance} –º–æ–Ω–µ—Ç\n"
        response += f"üìà –£—Ä–æ–≤–µ–Ω—å: {level}\n"
        response += f"üåø –ó–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ: {gas}/100\n"
        response += f"‚≠ê –†–µ–ø—É—Ç–∞—Ü–∏—è: {reputation}/100\n"
        response += f"üí∏ –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥: {passive}/—á–∞—Å\n"
        response += f"üèÜ –ú–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ: {top_place}\n"
        response += f"üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {last_active}\n\n"
        response += "–ò—Å–ø–æ–ª—å–∑—É–π /top —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤"
    else:
        response = "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start"
    
    bot.send_message(message.chat.id, response)

@bot.message_handler(commands=['help'])
def show_help(message):
    help_text = """üõ†Ô∏è –î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´:

üéÆ –û–°–ù–û–í–ù–´–ï:
/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å
/top - –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤
/do - –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
/guide - –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏–≥—Ä–µ

üå≥ –î–ï–ô–°–¢–í–ò–Ø:
/grow_tree - –ü–æ—Å–∞–¥–∏—Ç—å –¥–µ—Ä–µ–≤—å—è
/grow_tube - –°–Ω—è—Ç—å –≤–∏–¥–µ–æ
/interview - –î–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é
/money - –°–æ–±—Ä–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥

üíº –ò–ù–í–ï–°–¢–ò–¶–ò–ò:
/invest - –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –∫–æ–º–ø–∞–Ω–∏–∏
/get_profit - –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Ö–æ–¥ –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π

üìç –õ–û–ö–ê–¶–ò–ò:
/location - –¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è
/go - –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π
/go_city - –ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–æ—Ä–æ–¥
/go_forest - –ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–µ—Å
/go_industrial_zone - –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ–º–∑–æ–Ω—É

üéÅ –ë–û–ù–£–°–´:
/daily - –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞
/news - –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
/quests - –ö–≤–µ—Å—Ç—ã
/claim_quest - –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –∫–≤–µ—Å—Ç
/level_rewards - –ù–∞–≥—Ä–∞–¥—ã –∑–∞ —É—Ä–æ–≤–Ω–∏
/claim_level - –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —É—Ä–æ–≤–µ–Ω—å

üéØ –¶–ï–õ–¨ –ò–ì–†–´:
‚Ä¢ –ù–µ –æ–±–∞–Ω–∫—Ä–æ—Ç–∏—Ç—å—Å—è (–±–∞–ª–∞–Ω—Å > 0)
‚Ä¢ –ù–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é (> 0)
‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ (< 100)"""

    bot.send_message(message.chat.id, help_text)



@bot.message_handler(commands=['top'])
def player_top(message):
    connection = sq.connect('player.db')
    cursor = connection.cursor()

    try:

        cursor.execute('''
            UPDATE players 
            SET top_place = (
                SELECT COUNT(*) + 1 
                FROM players p2 
                WHERE p2.balance > players.balance
            )
        ''')
        connection.commit()

        cursor.execute('''
            SELECT name, balance, level, gas_level, reputation, passive_money, top_place 
            FROM players 
            ORDER BY balance DESC 
            LIMIT 10
        ''')
        players = cursor.fetchall()

        if players:
            response = "üèÜ –¢–û–ü-10 –ò–ì–†–û–ö–û–í –ü–û –ë–ê–õ–ê–ù–°–£:\n\n"
            
            for i, player in enumerate(players, 1):
                name, balance, level, gas, reputation, passive, top_place = player
                
                # –≠–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç
                medal = ""
                if i == 1:
                    medal = "ü•á"
                elif i == 2:
                    medal = "ü•à"
                elif i == 3:
                    medal = "ü•â"
                else:
                    medal = f"{i}."
                
                response += f"{medal} {name}\n"
                response += f"   üí∞ {balance} –º–æ–Ω–µ—Ç | üìä –£—Ä.{level} | ‚≠ê {reputation}\n"
                response += f"   üåø –ó–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ: {gas} | üí∏ –ü–∞—Å—Å–∏–≤: {passive}/—á–∞—Å\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –∏–≥—Ä–æ–∫–µ
            telegram_id = message.from_user.id
            cursor.execute('''
                SELECT name, balance, top_place, 
                       (SELECT COUNT(*) FROM players) as total_players
                FROM players WHERE telegram_id = ?
            ''', (telegram_id,))
            
            current_player = cursor.fetchone()
            if current_player:
                name, balance, rank, total = current_player
                response += f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
                response += f"üë§ –í–∞—à–µ –º–µ—Å—Ç–æ: {rank}/{total}\n"
                response += f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} –º–æ–Ω–µ—Ç"
            
        else:
            response = "‚ùå –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∏–≥—Ä–æ–∫–∞—Ö. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!"
        
        bot.send_message(message.chat.id, response)
        
    except sq.Error as e:
        print(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–π—Ç–∏–Ω–≥–∞.")
    
    finally:
        connection.close()
@bot.message_handler(commands=['do'])
def what_do(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT level, location FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if result:
            player_level, location = result
            
            actions = []
            if player_level >= 1:
                actions.append("üå≥ /grow_tree - –ø–æ—Å–∞–¥–∏—Ç—å –¥–µ—Ä–µ–≤—å—è (10 eco coin)")
            if player_level >= 2:
                actions.append("üé• /grow_tube - —Å–Ω—è—Ç—å –≤–∏–¥–µ–æ (40 eco coin)")
            if player_level >= 10:
                actions.append("üì∫ /interview - –¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é (60 eco coin)")
            
            actions.append("üí∞ /money - —Å–æ–±—Ä–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥")
            actions.append("üíº /invest - –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –∫–æ–º–ø–∞–Ω–∏–∏")
            actions.append("üíµ /get_profit - –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Ö–æ–¥ –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π")
            actions.append("üéÅ /daily - –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞")
            actions.append("üì∞ /news - —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏")
            
            if location == 'city':
                actions.append("\nüèôÔ∏è –î–ï–ô–°–¢–í–ò–Ø –í –ì–û–†–û–î–ï:")
                actions.append("üè¢ /work_office - —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ—Ñ–∏—Å–µ (50 eco coin)")
                actions.append("üõí /buy_supplies - –∫—É–ø–∏—Ç—å —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏ (30 eco coin)")
                actions.append("üìä /market_research - –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞ (25 eco coin)")
                actions.append("ü§ù /networking - –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ (40 eco coin)")
                
            elif location == 'forest':
                actions.append("\nüå≤ –î–ï–ô–°–¢–í–ò–Ø –í –õ–ï–°–£:")
                actions.append("üåø /collect_herbs - —Å–æ–±—Ä–∞—Ç—å —Ç—Ä–∞–≤—ã (15 eco coin)")
                actions.append("ü¶ã /study_wildlife - –∏–∑—É—á–∏—Ç—å –¥–∏–∫—É—é –ø—Ä–∏—Ä–æ–¥—É (35 eco coin)")
                actions.append("üèïÔ∏è /eco_camp - —ç–∫–æ-–ª–∞–≥–µ—Ä—å (60 eco coin)")
                actions.append("üì∏ /nature_photo - —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è –ø—Ä–∏—Ä–æ–¥—ã (20 eco coin)")
                
            elif location == 'industrial_zone':
                actions.append("\nüè≠ –î–ï–ô–°–¢–í–ò–Ø –í –ü–†–û–ú–ó–û–ù–ï:")
                actions.append("‚ôªÔ∏è /recycle_waste - –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç—Ö–æ–¥—ã (80 eco coin)")
                actions.append("üî¨ /tech_research - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (100 eco coin)")
                actions.append("‚ö° /energy_audit - —ç–Ω–µ—Ä–≥–æ–∞—É–¥–∏—Ç (70 eco coin)")
                actions.append("üõ†Ô∏è /repair_equipment - —Ä–µ–º–æ–Ω—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è (90 eco coin)")
            
            message_text = f"üìç –õ–æ–∫–∞—Ü–∏—è: {location}\n\n" + "\n".join(actions)
            bot.send_message(message.chat.id, message_text)
        else:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()
    
    game_over = check_game_over(telegram_id)
    if game_over:
        bot.send_message(message.chat.id, f"‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}")

@bot.message_handler(commands=['work_office'])
def work_office(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance, last_work_time FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance, last_work_time = result
        current_time = int(time.time())
        
        if location != 'city':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥–æ—Ä–æ–¥–µ!")
            return
            
        if current_time - (last_work_time or 0) < 300:
            remaining = 300 - (current_time - (last_work_time or 0))
            bot.send_message(message.chat.id, f"‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: {remaining} —Å–µ–∫—É–Ω–¥")
            return
            
        if balance >= 50:
            cursor.execute('''
                UPDATE players 
                SET balance = balance - 50 + 80, 
                    reputation = CASE WHEN reputation + 1 > 100 THEN 100 ELSE reputation + 1 END,
                    gas_level = CASE WHEN gas_level + 1 > 100 THEN 100 ELSE gas_level + 1 END,
                    last_work_time = ? 
                WHERE telegram_id = ?
            ''', (current_time, telegram_id))
            connection.commit()
            bot.send_message(message.chat.id, "üè¢ –ü–æ—Ä–∞–±–æ—Ç–∞–ª–∏ –≤ –æ—Ñ–∏—Å–µ!\nüí∞ -50 +80 eco coin\n‚≠ê Reputation +1\n‚õΩ Gas level +1")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()
    
    game_over = check_game_over(telegram_id)
    if game_over:
        bot.send_message(message.chat.id, f"‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}")

@bot.message_handler(commands=['collect_herbs'])
def collect_herbs(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance, last_herbs_time FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance, last_herbs_time = result
        current_time = int(time.time())
        
        if location != 'forest':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–µ—Å—É!")
            return
            
        if current_time - (last_herbs_time or 0) < 200:
            remaining = 200 - (current_time - (last_herbs_time or 0))
            bot.send_message(message.chat.id, f"‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: {remaining} —Å–µ–∫—É–Ω–¥")
            return
            
        if balance >= 15:
            cursor.execute('''
                UPDATE players 
                SET balance = balance - 15 + 35, 
                    gas_level = CASE WHEN gas_level - 1 < 0 THEN 0 ELSE gas_level - 1 END,
                    last_herbs_time = ? 
                WHERE telegram_id = ?
            ''', (current_time, telegram_id))
            connection.commit()
            bot.send_message(message.chat.id, "üåø –°–æ–±—Ä–∞–ª–∏ –ª–µ—á–µ–±–Ω—ã–µ —Ç—Ä–∞–≤—ã!\nüí∞ -15 +35 eco coin\n‚õΩ Gas level -1")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()
    
    game_over = check_game_over(telegram_id)
    if game_over:
        bot.send_message(message.chat.id, f"‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}")

@bot.message_handler(commands=['recycle_waste'])
def recycle_waste(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance, last_recycle_time FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance, last_recycle_time = result
        current_time = int(time.time())
        
        if location != 'industrial_zone':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–º–∑–æ–Ω–µ!")
            return
            
        if current_time - (last_recycle_time or 0) < 400:
            remaining = 400 - (current_time - (last_recycle_time or 0))
            bot.send_message(message.chat.id, f"‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: {remaining} —Å–µ–∫—É–Ω–¥")
            return
            
        if balance >= 80:
            cursor.execute('''
                UPDATE players 
                SET balance = balance - 80 + 150, 
                    gas_level = CASE WHEN gas_level - 3 < 0 THEN 0 ELSE gas_level - 3 END,
                    reputation = CASE WHEN reputation + 2 > 100 THEN 100 ELSE reputation + 2 END,
                    last_recycle_time = ? 
                WHERE telegram_id = ?
            ''', (current_time, telegram_id))
            connection.commit()
            bot.send_message(message.chat.id, "‚ôªÔ∏è –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–ª–∏ –æ—Ç—Ö–æ–¥—ã!\nüí∞ -80 +150 eco coin\n‚õΩ Gas level -3\n‚≠ê Reputation +2")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()
    
    game_over = check_game_over(telegram_id)
    if game_over:
        bot.send_message(message.chat.id, f"‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}")

@bot.message_handler(commands=['grow_tree'])
def grow_tree(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT last_tree_time, balance, level, gas_level FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        last_tree_time, balance, level, gas_level = result
        current_time = int(time.time())
        
        if level < 1:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!")
            return
        
        if current_time - last_tree_time < 300:
            remaining = 300 - (current_time - last_tree_time)
            bot.send_message(message.chat.id, f"‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: {remaining} —Å–µ–∫—É–Ω–¥")
            return
        
        if balance >= 10:
            cursor.execute('''
                UPDATE players 
                SET balance = balance - 10,
                    gas_level = CASE WHEN gas_level - 2 < 0 THEN 0 ELSE gas_level - 2 END,
                    reputation = CASE WHEN reputation + 2 > 100 THEN 100 ELSE reputation + 2 END,
                    level = level + 1,
                    last_tree_time = ?
                WHERE telegram_id = ?
            ''', (current_time, telegram_id))
            
            connection.commit()
            bot.send_message(message.chat.id, 
                "üå≥ –î–µ—Ä–µ–≤–æ –ø–æ—Å–∞–∂–µ–Ω–æ!\n"
                "üí∞ Balance -10\n" 
                "‚õΩ Gas level -2\n" 
                "‚≠ê Reputation +2\n" 
                "üéØ Level +1")
            update_quest_progress(telegram_id, 'plant_trees')
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")


            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()
    
    game_over = check_game_over(telegram_id)
    if game_over:
        bot.send_message(message.chat.id, f"‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}")
–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–æ—Ç–≤–µ—Ç = None
@bot.message_handler(commands=['grow_tube'])
def grow_tube(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT last_tube_time, balance, level, gas_level FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        last_tube_time, balance, level, gas_level = result
        current_time = int(time.time())
        
        if level < 2:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!")
            return
        
        if current_time - last_tube_time < 500:
            remaining = 500 - (current_time - last_tube_time)
            bot.send_message(message.chat.id, f"‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: {remaining} —Å–µ–∫—É–Ω–¥")
            return
        
        if balance >= 40:
            cursor.execute('''
                UPDATE players 
                SET balance = balance - 40,
                    gas_level = CASE WHEN gas_level - 3 < 0 THEN 0 ELSE gas_level - 3 END,
                    reputation = CASE WHEN reputation + 1 > 100 THEN 100 ELSE reputation + 1 END,
                    passive_money = passive_money + 10,
                    last_tube_time = ?
                WHERE telegram_id = ?
            ''', (current_time, telegram_id))
            
            connection.commit()
            bot.send_message(message.chat.id, 
                "üé• –í–∏–¥–µ–æ –≤—ã–ª–æ–∂–µ–Ω–æ!\n"
                "üí∞ Balance -40\n" 
                "‚õΩ Gas level -3\n" 
                "‚≠ê Reputation +1\n" 
                "üíµ Passive money +10\n"
                '–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /money –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞')
            update_quest_progress(telegram_id, 'make_videos')
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()
    
    game_over = check_game_over(telegram_id)
    if game_over:
        bot.send_message(message.chat.id, f"‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}")


@bot.message_handler(commands=['interview'])
def interview(message):
    global –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–æ—Ç–≤–µ—Ç
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT last_interview_time, balance, level, gas_level FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        last_interview_time, balance, level, gas_level = result
        current_time = int(time.time())

        if level < 10:
            bot.send_message(message.chat.id, "–≤—ã –Ω–µ —Å–ª–∏—à–∫–æ–º –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è –Ω—É–∂–µ–Ω —É—Ä–æ–≤–µ–Ω—å 10")
            return
        
        if current_time - last_interview_time < 500:
            remaining = 500 - (current_time - last_interview_time)
            bot.send_message(message.chat.id, f"‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: {remaining} —Å–µ–∫—É–Ω–¥")
            return
        
        if balance > 60: 
            ecology_questions = [
    {
        "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç?",
        "correct_answer": "–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–¥–µ—Ä–∂–∫–∏ —Ç–µ–ø–ª–æ–≤–æ–π —ç–Ω–µ—Ä–≥–∏–∏",
        "wrong_answers": [
            "–ü—Ä–æ—Ü–µ—Å—Å –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è –∑–∞ —Å—á–µ—Ç –æ–±–ª–∞–∫–æ–≤",
            "–°–ø–æ—Å–æ–± –æ—á–∏—Å—Ç–∫–∏ –≤–æ–∑–¥—É—Ö–∞"
        ]
    },
    {
        "question": "–ö–∞–∫–æ–π –≥–∞–∑ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –¥–æ–ª—é –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤?",
        "correct_answer": "–î–≤—É–æ–∫–∏—Å—å —É–≥–ª–µ—Ä–æ–¥–∞ (CO2)",
        "wrong_answers": [
            "–ö–∏—Å–ª–æ—Ä–æ–¥ (O2)",
            "–ê–∑–æ—Ç (N2)"
        ]
    },
    {
        "question": "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —Ç–µ—Ä–º–∏–Ω '–±–∏–æ—Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ'?",
        "correct_answer": "–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∂–∏–≤—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤",
        "wrong_answers": [
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –æ—Ç—Ö–æ–¥–æ–≤",
            "–°–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–∑–º–Ω–æ–∂–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤"
        ]
    },
    {
        "question": "–ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –æ–∫–µ–∞–Ω–∞?",
        "correct_answer": "–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –æ—Ç—Ö–æ–¥—ã",
        "wrong_answers": [
            "–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –º—É—Å–æ—Ä,",
            "–†–∞–¥–∏–æ–≤–æ–ª–Ω—ã,"
        ]
    }
]


            random_qa = random.choice(ecology_questions)
            –≤–æ–ø—Ä–æ—Å = random_qa["question"]
            –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–æ—Ç–≤–µ—Ç = random_qa["correct_answer"]
            –Ω–µ–≤–µ—Ä–Ω—ã–π_–æ—Ç–≤–µ—Ç1 = random_qa["wrong_answers"][0]
            –Ω–µ–≤–µ—Ä–Ω—ã–π_–æ—Ç–≤–µ—Ç2 = random_qa["wrong_answers"][1]

            spisok = [–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–æ—Ç–≤–µ—Ç, –Ω–µ–≤–µ—Ä–Ω—ã–π_–æ—Ç–≤–µ—Ç1, –Ω–µ–≤–µ—Ä–Ω—ã–π_–æ—Ç–≤–µ—Ç2]
            random.shuffle(spisok)

            markup = types.InlineKeyboardMarkup()

            for answer in spisok:
                button = types.InlineKeyboardButton(text=answer, callback_data=f"answer:{answer}")
                markup.add(button)
            bot.send_message(message.chat.id, –≤–æ–ø—Ä–æ—Å, reply_markup=markup)
            connection.commit()
            

    finally:
        cursor.execute('UPDATE players SET last_interview_time = ? WHERE telegram_id = ?', (current_time, telegram_id))
        connection.commit()
        cursor.close()
        connection.close()

@bot.callback_query_handler(func=lambda call: call.data.startswith('answer'))
def handle_answer(call):
    global –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–æ—Ç–≤–µ—Ç
    telegram_id = call.message.chat.id
    selected = call.data[len('answer:'):]
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        if selected == –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–æ—Ç–≤–µ—Ç:
            bot.send_message(call.message.chat.id, 'üéâ –ú–æ–ª–æ–¥–µ—Ü! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.')
            bot.delete_message(call.message.chat.id, call.message.message_id)
            cursor.execute('''
                    UPDATE players 
                    SET balance = balance + 40,
                        reputation = CASE WHEN reputation + 5 > 100 THEN 100 ELSE reputation + 5 END,
                        passive_money = passive_money + 10,
                        gas_level = CASE WHEN gas_level - 1 < 0 THEN 0 ELSE gas_level - 1 END
                    WHERE telegram_id = ?
                ''', (telegram_id,))
            connection.commit()
            bot.send_message(call.message.chat.id, 
                    "üé•–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –ø—Ä–æ–π–¥–µ–Ω–∞\n"
                    "üí∞ Balance +40\n" 
                    "‚≠ê Reputation +5\n" 
                    "üíµ Passive money +10\n"
                    "‚õΩ Gas level -1\n"
                    '–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /money –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞')
        else:
            cursor.execute('SELECT balance, reputation FROM players WHERE telegram_id = ?', (telegram_id,))
            result = cursor.fetchone()
            if result:
                balance, reputation = result
                if balance >= 40 and reputation >= 5:
                    cursor.execute('''
                            UPDATE players 
                            SET balance = balance - 40,
                                reputation = reputation - 5
                            WHERE telegram_id = ?
                        ''', (telegram_id,))
                    connection.commit()
                    bot.send_message(call.message.chat.id, 
                            "üé• –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –ø—Ä–æ–∏–≥—Ä–∞–Ω–∞\n"
                            "üí∞ Balance -40\n" 
                            "‚≠ê Reputation -5\n" )
                else:
                    bot.send_message(call.message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –¥–ª—è —à—Ç—Ä–∞—Ñ–∞!")
            bot.send_message(call.message.chat.id, f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–æ—Ç–≤–µ—Ç}.")
            bot.delete_message(call.message.chat.id, call.message.message_id)
    finally:
        cursor.close()
        connection.close()
    
    game_over = check_game_over(telegram_id)
    if game_over:
        bot.send_message(call.message.chat.id, f"‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}")




@bot.message_handler(commands=['help'])
def collect_money(message):
    bot.send_message(message.chat.id, "/do-—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥,/start-—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, /balance-—Ç–≤–æ–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")



@bot.message_handler(commands=['money'])
def collect_money(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT last_passive_time, passive_money, reputation FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        last_passive_time, passive_money, reputation = result
        current_time = int(time.time())
        
        if current_time - last_passive_time < 60:
            remaining = 60 - (current_time - last_passive_time)
            bot.send_message(message.chat.id, f"‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: {remaining} —Å–µ–∫—É–Ω–¥")
            return
        
        if passive_money >= 5:
            if reputation > 1:
                cursor.execute('''
                    UPDATE players 
                    SET balance = balance + ?,
                        reputation = reputation - 1,
                        last_passive_time = ?
                    WHERE telegram_id = ?
                ''', (passive_money, current_time, telegram_id))
                
                connection.commit()
                bot.send_message(message.chat.id, 
                    f"üí∞ –ü–æ–ª—É—á–µ–Ω–æ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞: {passive_money} eco coin\n" 
                    "‚≠ê Reputation -1")
                update_quest_progress(telegram_id, 'earn_money', passive_money)
            else:
                cursor.execute('''
                    UPDATE players 
                    SET balance = balance + ?,
                        last_passive_time = ?
                    WHERE telegram_id = ?
                ''', (passive_money, current_time, telegram_id))
                
                connection.commit()
                bot.send_message(message.chat.id, 
                    f"üí∞ –ü–æ–ª—É—á–µ–Ω–æ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞: {passive_money} eco coin\n" 
                    "‚≠ê Reputation —É–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è")
                update_quest_progress(telegram_id, 'earn_money', passive_money)
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()
    
    game_over = check_game_over(telegram_id)
    if game_over:
        bot.send_message(message.chat.id, f"‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}")
@bot.message_handler(commands=['location'])
def check_location(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()

    try:
        cursor.execute('SELECT location FROM players WHERE telegram_id = ?', (telegram_id, ))
        result = cursor.fetchone()

        if result:
            location = result[0]
            bot.send_message(message.chat.id, f"üìç –¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è: {location} –ø—Ä–æ–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /go –¥–ª—è –ø–µ—Ä–º–µ—â–µ–Ω–∏—è")
        else:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['go'])
def go_loc(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT level, location FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        level, location = result
        
        message_text = f"üìç –¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è: {location}\n\nüö∂ –î–û–°–¢–£–ü–ù–´–ï –ü–ï–†–ï–ú–ï–©–ï–ù–ò–Ø:\n\n"
        
        message_text += "üèôÔ∏è /go_city - –ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–æ—Ä–æ–¥ (10 eco coin)\n"
        
        if level >= 10:
            message_text += "üå≤ /go_forest - –ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–µ—Å (10 eco coin, —É—Ä–æ–≤–µ–Ω—å 10+)\n"
        else:
            message_text += "üîí –õ–µ—Å - –Ω—É–∂–µ–Ω 10 —É—Ä–æ–≤–µ–Ω—å\n"
            
        if level >= 20:
            message_text += "üè≠ /go_industrial_zone - –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ–º–∑–æ–Ω—É (10 eco coin, —É—Ä–æ–≤–µ–Ω—å 20+)\n"
        else:
            message_text += "üîí –ü—Ä–æ–º–∑–æ–Ω–∞ - –Ω—É–∂–µ–Ω 20 —É—Ä–æ–≤–µ–Ω—å\n"
            
        bot.send_message(message.chat.id, message_text)
        
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()



def go_any(telegram_id, new_loc , cost, min_level=0):
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        resultss = ''
        cursor.execute('SELECT last_go_time, balance, level, location FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        if not result:
            resultss = "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            return resultss
        
        last_go_time, balance, level, location = result
        
        current_time = int(time.time())
        
        if current_time - last_go_time < 60:
            remaining = 60 - (current_time - last_go_time)
            resultss +=f"‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: {remaining} —Å–µ–∫—É–Ω–¥"
            return resultss
        if location == new_loc:
            resultss += f"–¢—ã —É–∂–µ –≤ {new_loc}"
        elif location != new_loc and balance >= cost and level >= min_level :
            cursor.execute('''
                UPDATE players 
                SET balance = balance - ?,
                    last_go_time = ?,
                    location = ?,
                    gas_level = CASE WHEN gas_level + 1 > 100 THEN 100 ELSE gas_level + 1 END
                WHERE telegram_id = ?
            ''', (cost, current_time, new_loc, telegram_id))
            connection.commit()
            resultss += f'–¢—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª—Å—è –≤ –ª–æ–∫–∞—Ü–∏—é {new_loc}\n‚õΩ Gas level +1 (—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç)'
        elif balance < cost:
            resultss +=f'–£ –¢–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –ø—Ä–æ–µ–∑–¥ —Å—Ç–æ–∏–º–æ—Å—Ç—å {cost}'
        elif level < min_level:
            resultss += f'–£ –¢–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–ª—è –ø—Ä–æ–µ–∑–¥–∞ –Ω–∞ –ø—Ä–æ–µ–∑–¥ –≤ {new_loc} –Ω—É–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å {min_level}'


    except Exception as e:
        resultss += f"–û—à–∏–±–∫–∞: {e}"
        return resultss
    finally:
        cursor.close()
        connection.close()
        
        game_over = check_game_over(telegram_id)
        if game_over:
            resultss += f"\n\n‚ùå –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n{game_over}"
        
        return resultss


@bot.message_handler(commands=['go_city'])
def go_city(message):
    telegram_id = message.from_user.id
    result = go_any(telegram_id,'city',cost=10, min_level=0)
    bot.send_message(message.chat.id, result)


@bot.message_handler(commands=['go_forest'])
def go_forest(message):
    telegram_id = message.from_user.id
    result = go_any(telegram_id,'forest',cost=10, min_level=10)
    if result: 
        bot.send_message(message.chat.id, result)
    else:
            bot.send_message(message.chat.id, '–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å')


@bot.message_handler(commands=['go_industrial_zone'])
def go_industrial_zone(message):
    telegram_id = message.from_user.id
    result = go_any(telegram_id,'industrial_zone',cost=10, min_level=20)
    if result:
        bot.send_message(message.chat.id, result)
    else:
        bot.send_message(message.chat.id, '–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å')

        
all_companies = {
    '–ó–µ–ª—ë–Ω—ã–µ': {
        "—Å–æ–ª–Ω–µ—á–Ω–∞—è_—ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏—è": 150, "–≤–µ—Ç—Ä—è–Ω–∞—è_—Ñ–µ—Ä–º–∞": 120, "–∑–∞–≤–æ–¥_–ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏": 200,
        "–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è_—Ñ–µ—Ä–º–∞": 80, "—ç–∫–æ_—Ç—É—Ä–∏–∑–º": 90, "–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ_–±–∏–æ—Ç–æ–ø–ª–∏–≤–∞": 180,
        "–∑–∞–≤–æ–¥_–ø–æ_–æ–ø—Ä–µ—Å–Ω–µ–Ω–∏—é": 220, "–∫–æ–º–ø–∞–Ω–∏—è_–≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤": 60, "—ç–∫–æ_—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ": 110,
        "–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ_—ç–∫–æ_—É–ø–∞–∫–æ–≤–∫–∏": 70, "—Å–æ–ª–Ω–µ—á–Ω—ã–µ_–ø–∞–Ω–µ–ª–∏": 140, "—ç–∫–æ_—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç": 95
    },
    '–°—Ä–µ–¥–Ω–∏–µ': {
        "–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ_–∫–∞—Ä–∞–Ω–¥–∞—à–µ–π": 100, "IT_–∫–æ–º–ø–∞–Ω–∏—è": 130, "–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π_—Ü–µ–Ω—Ç—Ä": 85,
        "–∫–∞—Ñ–µ_–∑–¥–æ—Ä–æ–≤–æ–≥–æ_–ø–∏—Ç–∞–Ω–∏—è": 95, "—Ä–µ–º–æ–Ω—Ç–Ω–∞—è_–º–∞—Å—Ç–µ—Ä—Å–∫–∞—è": 65, "–ª–æ–∫–∞–ª—å–Ω—ã–π_–º–∞—Ä–∫–µ—Ç": 75,
        "–¥–∏–∑–∞–π–Ω_—Å—Ç—É–¥–∏—è": 110, "–∏–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ": 120, "–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π_—Ü–µ–Ω—Ç—Ä": 140,
        "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è_–∫–æ–º–ø–∞–Ω–∏—è": 160, "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è_—Ñ–∏—Ä–º–∞": 125, "—Ä–µ–∫–ª–∞–º–Ω–æ–µ_–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ": 105
    },
    '–ö—Ä–∞—Å–Ω—ã–µ': {
        "–Ω–µ—Ñ—Ç—è–Ω–∞—è_–∫–æ–º–ø–∞–Ω–∏—è": 300, "—É–≥–æ–ª—å–Ω–∞—è_—à–∞—Ö—Ç–∞": 250, "—Ö–∏–º–∏—á–µ—Å–∫–∏–π_–∑–∞–≤–æ–¥": 280,
        "—Ü–µ–º–µ–Ω—Ç–Ω—ã–π_–∑–∞–≤–æ–¥": 200, "–∞–≤—Ç–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å": 230, "–∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è": 270,
        "—Å—É–¥–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è_–≤–µ—Ä—Ñ—å": 190, "–º–µ—Ç–∞–ª–ª—É—Ä–≥–∏—á–µ—Å–∫–∏–π_–∫–æ–º–±–∏–Ω–∞—Ç": 260, "–ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π_–∑–∞–≤–æ–¥": 170,
        "–º—è—Å–Ω–æ–π_–∫–æ–º–±–∏–Ω–∞—Ç": 150, "—Ç–∞–±–∞—á–Ω–∞—è_—Ñ–∞–±—Ä–∏–∫–∞": 220, "–Ω–µ—Ñ—Ç–µ–ø–µ—Ä–µ—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π_–∑–∞–≤–æ–¥": 320
    },
    '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ': {
        "—Ç—é—Ä—å–º–∞": 1000, "–∫–æ—Å–º–∏—á–µ—Å–∫–∞—è_–∫–æ–º–ø–∞–Ω–∏—è": 5000, "–Ω–∞—É—á–Ω–∞—è_–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è": 3200,
        "—Ñ–æ–Ω–¥–æ–≤–∞—è_–±–∏—Ä–∂–∞": 4000, "–∫—Ä–∏–ø—Ç–æ_—Ñ–µ—Ä–º–∞": 1080, "–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π_–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç": 3050,
        "–∫–≤–∞–Ω—Ç–æ–≤—ã–µ_—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": 900, "–±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": 1050, "–Ω–∞–Ω–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": 5050
    }
}

available_companies = {}
last_update_time = 0

def update_available_companies():
    global available_companies, last_update_time
    current_time = int(time.time())
    
    if current_time - last_update_time < 180:
        return
        
    available_companies = {}
    
    for name, price in all_companies['–ó–µ–ª—ë–Ω—ã–µ'].items():
        if random.random() < 0.35:
            available_companies[name] = {'price': price, 'category': '–ó–µ–ª—ë–Ω—ã–µ'}
            
    for name, price in all_companies['–°—Ä–µ–¥–Ω–∏–µ'].items():
        if random.random() < 0.25:
            available_companies[name] = {'price': price, 'category': '–°—Ä–µ–¥–Ω–∏–µ'}
            
    for name, price in all_companies['–ö—Ä–∞—Å–Ω—ã–µ'].items():
        if random.random() < 0.10:
            available_companies[name] = {'price': price, 'category': '–ö—Ä–∞—Å–Ω—ã–µ'}
            
    for name, price in all_companies['–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ'].items():
        if random.random() < 0.01:
            available_companies[name] = {'price': price, 'category': '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ'}
            
    last_update_time = current_time
@bot.message_handler(commands=['invest'])
def invest(message):
    update_available_companies()
    
    if not available_companies:
        bot.send_message(message.chat.id, "üìà –ë–∏—Ä–∂–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.")
        return
        
    available_categories = set()
    for company_data in available_companies.values():
        available_categories.add(company_data['category'])
    
    markup = types.InlineKeyboardMarkup()
    
    if '–ó–µ–ª—ë–Ω—ã–µ' in available_categories:
        button1 = types.InlineKeyboardButton(text='üíö –ó–µ–ª—ë–Ω—ã–µ', callback_data="category_–ó–µ–ª—ë–Ω—ã–µ")
        markup.add(button1)
    if '–°—Ä–µ–¥–Ω–∏–µ' in available_categories:
        button2 = types.InlineKeyboardButton(text='üü° –°—Ä–µ–¥–Ω–∏–µ', callback_data="category_–°—Ä–µ–¥–Ω–∏–µ")
        markup.add(button2)
    if '–ö—Ä–∞—Å–Ω—ã–µ' in available_categories:
        button3 = types.InlineKeyboardButton(text='üî¥ –ö—Ä–∞—Å–Ω—ã–µ', callback_data="category_–ö—Ä–∞—Å–Ω—ã–µ")
        markup.add(button3)
    if '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ' in available_categories:
        button4 = types.InlineKeyboardButton(text='üíé –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ', callback_data="category_–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ")
        markup.add(button4)
        
    next_update = 180 - (int(time.time()) - last_update_time)
    
    bot.send_message(message.chat.id, 
        f'üìä –§–û–ù–î–û–í–ê–Ø –ë–ò–†–ñ–ê\n\n'
        f'‚è∞ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑: {next_update} —Å–µ–∫\n\n'
        '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–∫—Ü–∏–π:', 
        reply_markup=markup)
    
@bot.callback_query_handler(func=lambda call: call.data.startswith('category_'))
def handle_category_selection(call):
    global companies, current_category
    category = call.data.replace('category_', '')
    current_category = category
    chat_id = call.message.chat.id
    
    category_companies = {}
    for name, data in available_companies.items():
        if data['category'] == category:
            category_companies[name] = data['price']
    
    if not category_companies:
        bot.send_message(chat_id, f"‚ùå –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}' –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫—Ü–∏–π!")
        return
        
    companies = category_companies
    
    category_emoji = {
        '–ó–µ–ª—ë–Ω—ã–µ': 'üíö',
        '–°—Ä–µ–¥–Ω–∏–µ': 'üü°', 
        '–ö—Ä–∞—Å–Ω—ã–µ': 'üî¥',
        '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ': 'üíé'
    }
    
    message_text = f"{category_emoji.get(category, '')} –ê–ö–¶–ò–ò '{category.upper()}':\n\n"
    message_text += "üìà –î–û–°–¢–£–ü–ù–´–ï:\n"
    
    for name, price in category_companies.items():
        message_text += f"‚Ä¢ {name}: {price} eco coin\n"
        
    unavailable = []
    for name in all_companies[category]:
        if name not in available_companies:
            unavailable.append(name)
            
    if unavailable:
        message_text += "\nüìâ –ù–ï–î–û–°–¢–£–ü–ù–´–ï:\n"
        for name in unavailable[:5]:
            message_text += f"‚Ä¢ {name}\n"
        if len(unavailable) > 5:
            message_text += f"‚Ä¢ ... –∏ –µ—â—ë {len(unavailable) - 5}\n"
    
    message_text += "\nüí° –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏"
        
    global selected_True 
    selected_True = True

    bot.send_message(chat_id, message_text)

@bot.message_handler(commands=['get_profit'])
def get_investment_profit(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT company_name, amount, category FROM investments WHERE telegram_id = ?', (telegram_id,))
        investments = cursor.fetchall()
        
        if not investments:
            bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π!")
            return
            
        total_profit = 0
        results = []
        
        for company_name, amount, category in investments:
            if category == '–ó–µ–ª—ë–Ω—ã–µ':
                multiplier = random.uniform(0.75, 1.5)
            elif category == '–°—Ä–µ–¥–Ω–∏–µ':
                multiplier = random.uniform(0.5, 1.75)
            elif category == '–ö—Ä–∞—Å–Ω—ã–µ':
                multiplier = random.uniform(0.25, 2.0)
            else:
                multiplier = random.uniform(0.25, 2.0)
                
            profit = int(amount * multiplier)
            total_profit += profit
            
            if multiplier > 1:
                emoji = "üìà"
            elif multiplier < 1:
                emoji = "üìâ"
            else:
                emoji = "‚û°Ô∏è"
                
            results.append(f"{emoji} {company_name}: {profit} eco coin (x{multiplier:.2f})")
        
        cursor.execute('UPDATE players SET balance = balance + ? WHERE telegram_id = ?', (total_profit, telegram_id))
        cursor.execute('DELETE FROM investments WHERE telegram_id = ?', (telegram_id,))
        connection.commit()
        
        message_text = "üí∞ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:\n\n" + "\n".join(results)
        message_text += f"\n\nüíµ –û–±—â–∏–π –¥–æ—Ö–æ–¥: {total_profit} eco coin"
        bot.send_message(message.chat.id, message_text)
        
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()
@bot.message_handler(commands=['daily'])
def daily(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()

    try:
        cursor.execute('SELECT last_daily FROM players WHERE telegram_id = ?', (telegram_id, ))
        result = cursor.fetchone()

        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        last_daily = result[0]

        current_time = int(time.time())

        if current_time - last_daily < 86400:
            remaining = 86400 - (current_time - last_daily)
            hours = remaining // 3600
            minutes = (remaining % 3600) // 60
            bot.send_message(message.chat.id, f"‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: {hours} —á–∞—Å–æ–≤ –∏ {minutes} –º–∏–Ω—É—Ç")
        else:
            cursor.execute('UPDATE players SET balance = balance + 100, last_daily = ? WHERE telegram_id = ?', (current_time, telegram_id))
            connection.commit()
            bot.send_message(message.chat.id, "‚úÖ –í—ã –ø–æ–ª—É—á–∏–ª–∏ 100 eco coin –∑–∞ –¥–µ–Ω—å!")

    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()


@bot.message_handler(commands=['news'])
def news(message):
    eco_news = [
    "üåç –°–µ–≥–æ–¥–Ω—è –º–∏—Ä–æ–≤–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–æ–≥–æ–≤–æ—Ä–∏–ª–æ—Å—å —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—ã–±—Ä–æ—Å—ã –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤ –Ω–∞ 30% –∫ 2030 –≥–æ–¥—É.",
    "üê† –ù–∞ –±–µ—Ä–µ–≥—É –û–∫–µ–∞–Ω–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è —Ä–æ—â–∞ –∫–æ—Ä–∞–ª–ª–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –±–ª–∞–≥–æ–¥–∞—Ä—è —É—Å–∏–ª–∏—è–º –¥–æ–±—Ä–æ–≤–æ–ª—å—Ü–µ–≤.",
    "‚ôªÔ∏è –£—á—ë–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã—Ö –æ—Ç—Ö–æ–¥–æ–≤ –≤ —ç–Ω–µ—Ä–≥–∏—é.",
    "üßπ –ú–µ—Å—Ç–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ —É—Å—Ç—Ä–æ–∏–ª–∏ —Å—É–±–±–æ—Ç–Ω–∏–∫ –ø–æ –æ—á–∏—Å—Ç–∫–µ —Ä–µ–∫–∏, —Å–æ–±—Ä–∞–≤ –∑–∞ –¥–µ–Ω—å —Ç–æ–Ω–Ω—ã –º—É—Å–æ—Ä–∞.",
    "üå¨Ô∏è –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤ —É—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞ –≤ –º–µ–≥–∞–ø–æ–ª–∏—Å–∞—Ö —Å–Ω–∏–∑–∏–ª—Å—è –Ω–∞ 15%.",
    "üóëÔ∏è –ò–∑—É—á–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —É—Ä–Ω—ã –∏ —Ä–∞–∑–¥–µ–ª—å–Ω—ã–π —Å–±–æ—Ä –º—É—Å–æ—Ä–∞ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫—É –æ—Ç—Ö–æ–¥–æ–≤ –Ω–∞ 25%.",
    "‚ö° –ö–æ–º–ø–∞–Ω–∏—è –æ–±—ä—è–≤–∏–ª–∞ –æ –Ω–∞–º–µ—Ä–µ–Ω–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —ç–Ω–µ—Ä–≥–∏–∏ –∫ 2025 –≥–æ–¥—É.",
    "ü¶ã –í –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º –ø–∞—Ä–∫–µ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ø—É–ª—è—Ü–∏—è —Ä–µ–¥–∫–∏—Ö –≤–∏–¥–æ–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö.",
    "üöå –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤—ã–¥–µ–ª–µ–Ω—ã –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥–Ω—ã—Ö –¥–æ—Ä–æ–∂–µ–∫.",
    "ü•§ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ –∑–∞–ø—Ä–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã—Ö —Å—Ç–∞–∫–∞–Ω—á–∏–∫–æ–≤ –≤—Å—Ç—É–ø–∏–ª–æ –≤ —Å–∏–ª—É.",
    "ü§ñ –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö —É–∂–µ –≤–Ω–µ–¥—Ä–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ ¬´—É–º–Ω—ã—Ö¬ª –º—É—Å–æ—Ä–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—â–∏—Ö –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å.",
    "üß™ –£—á—ë–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã–π –ø–ª–∞—Å—Ç–∏–∫, —Ä–∞–∑–ª–∞–≥–∞—é—â–∏–π—Å—è –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤.",
    "üë• –ú–æ–ª–æ–¥—ë–∂–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–æ–¥—è—Ç –∞–∫—Ü–∏–∏ –ø–æ —Ä–∞–∑–¥–µ–ª—å–Ω–æ–º—É —Å–±–æ—Ä—É –æ—Ç—Ö–æ–¥–æ–≤ –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.",
    "üå≥ –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –Ω–µ–¥–∞–≤–Ω–µ–π –∫–∞–º–ø–∞–Ω–∏–∏ –ø–æ –¥–µ—Ä–µ–≤–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã—Ä—É–±–ª–µ–Ω–Ω—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤ —É–º–µ–Ω—å—à–∏–ª–æ—Å—å –Ω–∞ 20%.",
    "‚òÄÔ∏è –ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–ª–∏ —Å–æ–ª–Ω–µ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è, —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–µ –ö–ü–î –¥–æ 25%.",
    "üèûÔ∏è –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç—É—Ä–∏–∑–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤—Å—ë –±–æ–ª–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º, —Å—Ç–∏–º—É–ª–∏—Ä—É—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥—ã.",
    "üîã –ú–µ—Å—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤–Ω–µ–¥—Ä—è—é—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –±–∞—Ç–∞—Ä–µ–π –∏ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–æ–≤.",
    "üåä –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö –Ω–∞—á–∞–ª–∏—Å—å –ø—Ä–æ–µ–∫—Ç—ã –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –±–æ–ª–æ—Ç –∏ –≤–æ–¥–Ω–æ-–±–æ–ª–æ—Ç–Ω—ã—Ö —É–≥–æ–¥–∏–π –¥–ª—è –±–æ—Ä—å–±—ã —Å –∑–∞—Å—É—Ö–æ–π –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è –±–∏–æ—Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è.",
    "üê¢ –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –ø–æ–≤—ã—à–∞—é—Ç –æ—Å–≤–µ–¥–æ–º–ª—ë–Ω–Ω–æ—Å—Ç—å –æ –≤—Ä–µ–¥–µ –ø–ª–∞—Å—Ç–∏–∫–∞ –¥–ª—è –º–æ—Ä—Å–∫–æ–π –∂–∏–∑–Ω–∏.",
    "üöó –†–æ—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–µ–π –ø–æ–º–æ–≥–∞–µ—Ç —Å–Ω–∏–∑–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞ –≤ –º–µ–≥–∞–ø–æ–ª–∏—Å–∞—Ö.",
    "üè¢ –ì–æ—Ä–æ–¥–∞ –≤–Ω–µ–¥—Ä—è—é—Ç –∑–µ–ª–µ–Ω—ã–µ –∫—Ä—ã—à–∏ –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Å–∞–¥—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —ç–∫–æ–ª–æ–≥–∏–∏ –∏ —Å–Ω–∏–∂–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã.",
    "ü¶Å –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –æ–±—ä—è–≤–∏–ª–∏ –æ –Ω–æ–≤—ã—Ö —Ü–µ–ª—è—Ö –ø–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é —Ä–µ–¥–∫–∏—Ö –≤–∏–¥–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —Ä–∞—Å—Ç–µ–Ω–∏–π.",
    "üåû –í —Ä–∞–∑–≤–∏–≤–∞—é—â–∏—Ö—Å—è —Å—Ç—Ä–∞–Ω–∞—Ö –Ω–∞—á–∞–ª–æ—Å—å –º–∞—Å—à—Ç–∞–±–Ω–æ–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–æ–ª–Ω–µ—á–Ω–æ–π —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ –¥–ª—è –±–æ—Ä—å–±—ã —Å —ç–Ω–µ—Ä–≥–æ–¥–µ—Ñ–∏—Ü–∏—Ç–æ–º.",
    "üå≤ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–µ—Å–æ–≤ –ø–æ–º–æ–≥–∞–µ—Ç —Å–Ω–∏–∂–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å CO2 –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ.",
    "üö´ –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö –≤–≤–æ–¥—è—Ç —à—Ç—Ä–∞—Ñ—ã –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–π –ø–ª–∞—Å—Ç–∏–∫–æ–≤–æ–π –ø–æ—Å—É–¥—ã.",
    "üå± –ö–æ–º–∞–Ω–¥—ã —É—á–µ–Ω—ã—Ö —Å–æ–∑–¥–∞—é—Ç –±–∏–æ—Ä–∞—Å—Ç–µ–Ω–∏—è, –ø–æ–≥–ª–æ—â–∞—é—â–∏–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –∏–∑ –≤–æ–∑–¥—É—Ö–∞ –∏ –≤–æ–¥—ã.",
    "üõçÔ∏è –ü—Ä–æ–≤–æ–¥—è—Ç—Å—è –∫–∞–º–ø–∞–Ω–∏–∏ –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–∞—Ö.",
    "üåä –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –ø–æ –æ—á–∏—Å—Ç–∫–µ –æ–∫–µ–∞–Ω–æ–≤ —Å–æ–±–∏—Ä–∞—é—Ç —Ç–æ–Ω–Ω—ã –ø–ª–∞—Å—Ç–∏–∫–∞ –∏ –º—É—Å–æ—Ä–∞.",
    "üìö –ö—Ä–∞—Å–æ—á–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –ø–æ –ø—Ä–æ—Å–≤–µ—â–µ–Ω–∏—é –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–∏–æ—Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç –≤ —à–∫–æ–ª–∞—Ö –∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞—Ö.",
    "üíª –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–æ —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –æ—Ç—Ö–æ–¥–æ–≤, –æ–ø–∞—Å–Ω—ã—Ö –¥–ª—è –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã.",
    "üöú –í —Å–µ–ª—å—Å–∫–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö —É–¥–æ–±—Ä–µ–Ω–∏–π –∏ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∑–µ–º–ª–µ–¥–µ–ª–∏—è.",
    "üé® –ì–æ—Ä–æ–¥—Å–∫–∏–µ –ø–∞—Ä–∫–∏ —É–∫—Ä–∞—à–∞—é—Ç –Ω–æ–≤—ã–µ —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ –∏–Ω—Å—Ç–∞–ª–ª—è—Ü–∏–∏ –∏ –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã –∏–∑ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.",
    "üèõÔ∏è –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å—Ç–∞–ª —á–∞—Å—Ç—å—é –≥–æ—Ä–æ–¥—Å–∫–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏, –≤–∫–ª—é—á–∞—é—â–µ–π –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã.",
    "ü§ñ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ —Å–Ω–∏–∑–∏—Ç—å –≤—ã–±—Ä–æ—Å—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤.",
    "üè≠ –ú–Ω–æ–≥–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –≤–≤–æ–¥—è—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è.",
    "‚úä –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –∏ –∞–∫—Ç–∏–≤–∏—Å—Ç—ã –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç –±–æ—Ä–æ—Ç—å—Å—è –∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–¥–∫–∏—Ö –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π.",
    "üè† –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã—Ö –∂–∏–ª—ã—Ö –∫–æ–º–ø–ª–µ–∫—Å–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è —Å —É—á–µ—Ç–æ–º –∑–µ–ª–µ–Ω—ã—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤.",
    "üëó –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –º–æ–¥–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —Ç—Ä–µ–Ω–¥–æ–º —Å—Ä–µ–¥–∏ –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤."
]
    selected_news = random.choice(eco_news)
    bot.send_message(message.chat.id, f"üì∞ –≠–ö–û–õ–û–ì–ò–ß–ï–°–ö–ò–ï –ù–û–í–û–°–¢–ò:\n\n{selected_news}")
    

@bot.message_handler(commands=['buy_supplies'])
def buy_supplies(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance = result
        
        if location != 'city':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥–æ—Ä–æ–¥–µ!")
            return
            
        if balance >= 30:
            cursor.execute('UPDATE players SET balance = balance - 30 + 20, reputation = reputation + 1 WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            bot.send_message(message.chat.id, "üõí –ö—É–ø–∏–ª–∏ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏!\nüí∞ -30 +20 eco coin\n‚≠ê Reputation +1")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['market_research'])
def market_research(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance = result
        
        if location != 'city':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥–æ—Ä–æ–¥–µ!")
            return
            
        if balance >= 25:
            cursor.execute('UPDATE players SET balance = balance - 25 + 40, level = level + 1 WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            bot.send_message(message.chat.id, "üìä –ü—Ä–æ–≤–µ–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞!\nüí∞ -25 +40 eco coin\nüéØ Level +1")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['networking'])
def networking(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance = result
        
        if location != 'city':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥–æ—Ä–æ–¥–µ!")
            return
            
        if balance >= 40:
            cursor.execute('UPDATE players SET balance = balance - 40 + 60, passive_money = passive_money + 5 WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            bot.send_message(message.chat.id, "ü§ù –ü—Ä–æ–≤–µ–ª–∏ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥!\nüí∞ -40 +60 eco coin\nüíµ Passive money +5")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['study_wildlife'])
def study_wildlife(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance = result
        
        if location != 'forest':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–µ—Å—É!")
            return
            
        if balance >= 35:
            cursor.execute('UPDATE players SET balance = balance - 35 + 55, reputation = reputation + 2 WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            bot.send_message(message.chat.id, "ü¶ã –ò–∑—É—á–∏–ª–∏ –¥–∏–∫—É—é –ø—Ä–∏—Ä–æ–¥—É!\nüí∞ -35 +55 eco coin\n‚≠ê Reputation +2")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['eco_camp'])
def eco_camp(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance = result
        
        if location != 'forest':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–µ—Å—É!")
            return
            
        if balance >= 60:
            cursor.execute('UPDATE players SET balance = balance - 60 + 100, gas_level = gas_level - 2, reputation = reputation + 3 WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            bot.send_message(message.chat.id, "üèïÔ∏è –û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª–∏ —ç–∫–æ-–ª–∞–≥–µ—Ä—å!\nüí∞ -60 +100 eco coin\n‚õΩ Gas level -2\n‚≠ê Reputation +3")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()
interview
@bot.message_handler(commands=['nature_photo'])
def nature_photo(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance = result
        
        if location != 'forest':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–µ—Å—É!")
            return
            
        if balance >= 20:
            cursor.execute('UPDATE players SET balance = balance - 20 + 35, passive_money = passive_money + 3 WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            bot.send_message(message.chat.id, "üì∏ –ü—Ä–æ–≤–µ–ª–∏ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—é –ø—Ä–∏—Ä–æ–¥—ã!\nüí∞ -20 +35 eco coin\nüíµ Passive money +3")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['tech_research'])
def tech_research(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance = result
        
        if location != 'industrial_zone':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–º–∑–æ–Ω–µ!")
            return
            
        if balance >= 100:
            cursor.execute('UPDATE players SET balance = balance - 100 + 180, level = level + 2 WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            bot.send_message(message.chat.id, "üî¨ –ü—Ä–æ–≤–µ–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è!\nüí∞ -100 +180 eco coin\nüéØ Level +2")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['energy_audit'])
def energy_audit(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance = result
        
        if location != 'industrial_zone':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–º–∑–æ–Ω–µ!")
            return
            
        if balance >= 70:
            cursor.execute('UPDATE players SET balance = balance - 70 + 120, gas_level = gas_level - 4, reputation = reputation + 1 WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            bot.send_message(message.chat.id, "‚ö° –ü—Ä–æ–≤–µ–ª–∏ —ç–Ω–µ—Ä–≥–æ–∞—É–¥–∏—Ç!\nüí∞ -70 +120 eco coin\n‚õΩ Gas level -4\n‚≠ê Reputation +1")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['repair_equipment'])
def repair_equipment(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT location, balance FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        location, balance = result
        
        if location != 'industrial_zone':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–º–∑–æ–Ω–µ!")
            return
            
        if balance >= 90:
            cursor.execute('UPDATE players SET balance = balance - 90 + 140, passive_money = passive_money + 8 WHERE telegram_id = ?', (telegram_id,))
            connection.commit()
            bot.send_message(message.chat.id, "üõ†Ô∏è –û—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–ª–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ!\nüí∞ -90 +140 eco coin\nüíµ Passive money +8")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

def create_quest(telegram_id, quest_type, target, reward):
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    cursor.execute('INSERT INTO quests (telegram_id, quest_type, target, reward) VALUES (?, ?, ?, ?)', 
                   (telegram_id, quest_type, target, reward))
    connection.commit()
    cursor.close()
    connection.close()

def update_quest_progress(telegram_id, quest_type, progress_add=1):
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    cursor.execute('UPDATE quests SET progress = progress + ? WHERE telegram_id = ? AND quest_type = ? AND completed = 0', 
                   (progress_add, telegram_id, quest_type))
    connection.commit()
    cursor.close()
    connection.close()

@bot.message_handler(commands=['quests'])
def show_quests(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT quest_type, progress, target, reward, completed FROM quests WHERE telegram_id = ?', (telegram_id,))
        quests = cursor.fetchall()
        
        if not quests:
            create_quest(telegram_id, 'plant_trees', 5, 100)
            create_quest(telegram_id, 'make_videos', 3, 150)
            create_quest(telegram_id, 'earn_money', 1000, 200)
            bot.send_message(message.chat.id, "üéØ –ö–≤–µ—Å—Ç—ã —Å–æ–∑–¥–∞–Ω—ã! –ü—Ä–æ–ø–∏—à–∏—Ç–µ /quests —Å–Ω–æ–≤–∞")
            return
            
        message_text = "üéØ –í–ê–®–ò –ö–í–ï–°–¢–´:\n\n"
        
        for quest_type, progress, target, reward, completed in quests:
            if completed:
                status = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω"
            else:
                status = f"{progress}/{target}"
                
            if quest_type == 'plant_trees':
                message_text += f"üå≥ –ü–æ—Å–∞–¥–∏—Ç—å –¥–µ—Ä–µ–≤—å—è: {status} (üéÅ {reward} eco coin)\n"
            elif quest_type == 'make_videos':
                message_text += f"üé• –°–Ω—è—Ç—å –≤–∏–¥–µ–æ: {status} (üéÅ {reward} eco coin)\n"
            elif quest_type == 'earn_money':
                message_text += f"üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥: {status} (üéÅ {reward} eco coin)\n"
                
        message_text += "\nüíµ /claim_quest - –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É"
        bot.send_message(message.chat.id, message_text)
        
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['claim_quest'])
def claim_quest_reward(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT quest_type, progress, target, reward FROM quests WHERE telegram_id = ? AND completed = 0 AND progress >= target', (telegram_id,))
        completed_quests = cursor.fetchall()
        
        if not completed_quests:
            bot.send_message(message.chat.id, "‚ùå –ù–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤!")
            return
            
        total_reward = 0
        claimed_quests = []
        
        for quest_type, progress, target, reward in completed_quests:
            cursor.execute('UPDATE quests SET completed = 1 WHERE telegram_id = ? AND quest_type = ?', (telegram_id, quest_type))
            cursor.execute('UPDATE players SET balance = balance + ? WHERE telegram_id = ?', (reward, telegram_id))
            total_reward += reward
            
            if quest_type == 'plant_trees':
                claimed_quests.append(f"üå≥ –ü–æ—Å–∞–¥–∫–∞ –¥–µ—Ä–µ–≤—å–µ–≤")
            elif quest_type == 'make_videos':
                claimed_quests.append(f"üé• –°—ä—ë–º–∫–∞ –≤–∏–¥–µ–æ")
            elif quest_type == 'earn_money':
                claimed_quests.append(f"üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫")
                
        connection.commit()
        
        message_text = f"üéâ –ü–æ–ª—É—á–µ–Ω—ã –Ω–∞–≥—Ä–∞–¥—ã!\n\n" + "\n".join(claimed_quests)
        message_text += f"\n\nüíµ –û–±—â–∞—è –Ω–∞–≥—Ä–∞–¥–∞: {total_reward} eco coin"
        bot.send_message(message.chat.id, message_text)
        
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['level_rewards'])
def show_level_rewards(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT level FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        current_level = result[0]
        
        level_rewards = {
            5: 200, 10: 500, 15: 800, 20: 1200, 25: 1500,
            30: 2000, 35: 2500, 40: 3000, 45: 3500, 50: 5000
        }
        
        message_text = f"üéÜ –ù–ê–ì–†–ê–î–´ –ó–ê –£–†–û–í–ù–ò (—Ç–µ–∫—É—â–∏–π: {current_level}):\n\n"
        
        for level, reward in level_rewards.items():
            cursor.execute('SELECT claimed FROM level_rewards WHERE telegram_id = ? AND level = ?', (telegram_id, level))
            claimed_result = cursor.fetchone()
            
            if current_level >= level:
                if claimed_result and claimed_result[0] == 1:
                    status = "‚úÖ –ü–æ–ª—É—á–µ–Ω–æ"
                else:
                    status = "üéÅ –î–æ—Å—Ç—É–ø–Ω–æ"
            else:
                status = "üîí –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
                
            message_text += f"üéØ –£—Ä–æ–≤–µ–Ω—å {level}: {reward} eco coin - {status}\n"
            
        message_text += "\nüíµ /claim_level - –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —É—Ä–æ–≤–µ–Ω—å"
        bot.send_message(message.chat.id, message_text)
        
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['claim_level'])
def claim_level_reward(message):
    telegram_id = message.from_user.id
    connection = sq.connect('player.db')
    cursor = connection.cursor()
    
    try:
        cursor.execute('SELECT level FROM players WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        
        if not result:
            bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        current_level = result[0]
        
        level_rewards = {
            5: 200, 10: 500, 15: 800, 20: 1200, 25: 1500,
            30: 2000, 35: 2500, 40: 3000, 45: 3500, 50: 5000
        }
        
        claimed_rewards = []
        total_reward = 0
        
        for level, reward in level_rewards.items():
            if current_level >= level:
                cursor.execute('SELECT claimed FROM level_rewards WHERE telegram_id = ? AND level = ?', (telegram_id, level))
                claimed_result = cursor.fetchone()
                
                if not claimed_result or claimed_result[0] == 0:
                    cursor.execute('INSERT OR REPLACE INTO level_rewards (telegram_id, level, claimed) VALUES (?, ?, 1)', (telegram_id, level))
                    cursor.execute('UPDATE players SET balance = balance + ? WHERE telegram_id = ?', (reward, telegram_id))
                    claimed_rewards.append(f"üéØ –£—Ä–æ–≤–µ–Ω—å {level}: {reward} eco coin")
                    total_reward += reward
                    
        if claimed_rewards:
            connection.commit()
            message_text = f"üéâ –ü–æ–ª—É—á–µ–Ω—ã –Ω–∞–≥—Ä–∞–¥—ã!\n\n" + "\n".join(claimed_rewards)
            message_text += f"\n\nüíµ –û–±—â–∞—è –Ω–∞–≥—Ä–∞–¥–∞: {total_reward} eco coin"
            bot.send_message(message.chat.id, message_text)
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥!")
        
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        connection.close()

@bot.message_handler(commands=['guide'])
def guide(message):
    guide_text = """üìñ –†–£–ö–û–í–û–î–°–¢–í–û –ü–û –ò–ì–†–ï:

üå± –ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
üå≥ –°–Ω–∞—á–∞–ª–∞ —Å–∞–¥–∏—Ç–µ –¥–µ—Ä–µ–≤—å—è –¥–ª—è –ø–æ–¥–Ω—è—Ç–∏—è —É—Ä–æ–≤–Ω—è
üé• –ù–∞—á–∏–Ω–∞—è —Å 2 —É—Ä–æ–≤–Ω—è –≤—ã –º–æ–∂–µ—Ç–µ —Å–Ω–∏–º–∞—Ç—å –≤–∏–¥–µ–æ —á—Ç–æ –ø–æ–≤—ã—Å–∏—Ç –≤–∞—à –¥–æ—Ö–æ–¥
üí∞ –°–æ–±–∏—Ä–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏, —Å–∞–¥–∏—Ç–µ –¥–µ—Ä–µ–≤—å—è, –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ
üìç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /location —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≥–¥–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å
üö∂ –ü–µ—Ä–µ–º–µ—â–∞–π—Ç–µ—Å—å –º–µ–∂–¥—É –ª–æ–∫–∞—Ü–∏—è–º–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
üéØ –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∫–≤–µ—Å—Ç—ã –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —É—Ä–æ–≤–Ω–∏!"""
    bot.send_message(message.chat.id, guide_text)


    
@bot.message_handler(content_types=['text'])
def handle_text(message):
    global selected_company, selected_True, current_category
    if selected_True:
        if message.text in companies:
            telegram_id = message.from_user.id
            selected_company = message.text
            investment_cost = companies[message.text]
            
            connection = sq.connect('player.db')
            cursor = connection.cursor()
            
            try:
                cursor.execute('SELECT balance FROM players WHERE telegram_id = ?', (telegram_id,))
                result = cursor.fetchone()
                
                if not result:
                    bot.send_message(message.chat.id, "‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                    return
                    
                balance = result[0]
                
                if balance >= investment_cost:
                    cursor.execute('UPDATE players SET balance = balance - ? WHERE telegram_id = ?', (investment_cost, telegram_id))
                    cursor.execute('INSERT INTO investments (telegram_id, company_name, amount, category, invest_time) VALUES (?, ?, ?, ?, ?)',(telegram_id, selected_company, investment_cost, current_category, int(time.time())))
                    connection.commit()
                    
                    bot.send_message(message.chat.id, 
                        f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ {investment_cost} eco coin –≤ {selected_company}!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /get_profit –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞")
                else:
                    bot.send_message(message.chat.id, 
                        f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –ù—É–∂–Ω–æ: {investment_cost} eco coin")
                        
            except Exception as e:
                bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
            finally:
                cursor.close()
                connection.close()
                selected_True = False
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏!")
            selected_True = False
bot.infinity_polling()
